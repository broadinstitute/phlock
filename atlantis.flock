base_run_dir: /xchip/datasci/runs
executor: sge
{% if celllineSubset == "all" %}
qsub_options: -l mem_free=8G
{% endif %}
invoke:|
  stopifnot(flock_version[1] == 1)
  code.dir <- getwd();

  source("createBulkAtlantisFlock.R")
  source("writeAtlantisInputs.R")
  source("loadFromTaiga.R")

  # populate variables
  targetDatasetName = "{{targetDataset}} {{targetDataType}}"

  target.by.name <- list("55k gene solutions"="achilles-v2-4-3-demeter-cleaned-gene-solution",
    "55k seed solutions"="achilles-v2-4-3-demeter-cleaned-seed-solutions")
    #"98k gene solutions"="",
    #"98k seed solutions"="")

  targetMat <- t(load.matrix.from.taiga(name=target.by.name[[targetDatasetName]]))

  {% if celllineSubset == "solid" %}
    SI <- load.matrix.from.taiga(name="ccle-sample-info", version=1)
    solid.lines <- rownames(SI)[SI[,"solidorhaemo_is_solid"] == 1]
    lines.to.keep <- intersect(rownames(targetMat), solid.lines)
    stopifnot(length(lines.to.keep) > 0)
    targetMat <- targetMat[lines.to.keep,,drop=F]
  {% endif %}

  pred.sources <- list()
  {% for feature in predictiveFeatures %}
    {% if feature == "GE" %}
        m <- load.matrix.from.taiga(name="ccle-rnaseq-gene-expression-rpkm-for-analysis-in-manuscripts-protein-coding-genes-only", version=1)
        # expression matrix contains ensemble IDs as well as gene symbols, so strip those out
        #colnames(m) <- sub(pattern=" \\(ENSG[0-9]+.+\\)", replacement="", colnames(m))

        pred.def <- list(dat=m, prefix="Exp", vartype="Exp", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "CN" %}
        m <- load.matrix.from.taiga(name="ccle-copy-number-variants", version=1)
        pred.def <- list(dat=m, prefix="{{feature}}", vartype="{{feature}}", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "MUT" %}

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-hotspot", version=1)
        pred.def <- list(dat=m, prefix="MUThot", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-bad", version=2)
        pred.def <- list(dat=m, prefix="MUTdmg", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-missense", version=2)
        pred.def <- list(dat=m, prefix="MUTmis", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% else %}
        invalid
    {% endif %}
  {% endfor %}

  f <- writeAtlantisInputs(
	flock_run_dir,
        pred.sources=pred.sources,
        target.sources=list(
		    list(dat=targetMat, prefix="GS", vartype="GS", must.have.cellline=T)
	        ),
        analysisID=basename(flock_run_dir))

  createBulkAtlantisFlock("description", "regression", f$pred.file, f$target.file,
    f$anno.file, "{{predictiveFeatureSubset}}")

