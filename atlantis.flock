base_run_dir: /xchip/datasci/runs
executor: sge
{% if predictiveFeatureSubset == "all" and feature != ["MUT"] %}
  {% if "GE" in predictiveFeatures and "CN" in predictiveFeatures %}
qsub_options: -l h_vmem=17G,virtual_free=16G
  {% elif predictiveFeatures == ["high conf GS"] %}
  {% else %}
qsub_options: -l h_vmem=8G,virtual_free=6.5G
  {% endif %}
{% endif %}
invoke:|
  stopifnot(flock_version[1] == 1)
  code.dir <- getwd();

  source("createBulkAtlantisFlock.R")
  source("writeAtlantisInputs.R")
  source("loadFromTaiga.R")

  {% if targetDataset == "55k" %}
     {% if targetDataType == "gene solutions" %}
       targetPrefix <- "GS"
       targetMat <- t(load.matrix.from.taiga("achilles-v2-4-3-demeter-cleaned-gene-solution"))
     {% elif targetDataType == "seed solutions" %}
       targetPrefix <- "SS"
       targetMat <- t(load.matrix.from.taiga("achilles-v2-4-3-demeter-cleaned-seed-solution"))
     {% else %}
          stopifnot(FALSE);
     {% endif %}
  {% else %}
     stopifnot(FALSE);
  {% endif %}


  si.taiga.id <- "35105a4d-c0fb-496f-9318-06bf41c2c4ee"
  {% if celllineSubset == "solid" %}
    SI <- load.matrix.from.taiga(si.taiga.id)
    solid.lines <- rownames(SI)[SI[,"isHemato_is_no"] == 1]
    lines.to.keep <- intersect(rownames(targetMat), solid.lines)
    stopifnot(length(lines.to.keep) > 0)
    targetMat <- targetMat[lines.to.keep,,drop=F]
  {% endif %}

  pred.sources <- list()
  {% for feature in predictiveFeatures %}
    {% if feature == "GE" %}
        m <- load.matrix.from.taiga(name="ccle-rnaseq-gene-expression-rpkm-for-analysis-in-manuscripts-protein-coding-genes-only", version=1)

        pred.def <- list(dat=m, prefix="Exp", vartype="Exp", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "CN" %}
        m <- load.matrix.from.taiga(name="ccle-copy-number-variants", version=1)
        pred.def <- list(dat=m, prefix="{{feature}}", vartype="{{feature}}", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "MUT" %}

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-hotspot", version=1)
        pred.def <- list(dat=m, prefix="MUThot", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-bad", version=2)
        pred.def <- list(dat=m, prefix="MUTdmg", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

        m <- load.matrix.from.taiga(name="ccle-rnaseq-mutation-missense", version=2)
        pred.def <- list(dat=m, prefix="MUTmis", vartype="MUT", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def
    {% elif feature == "SI" %}

        m <- load.matrix.from.taiga(si.taiga.id)
        pred.def <- list(dat=m, prefix="SI", vartype="SI", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "miRNA" %}

        m <- load.matrix.from.taiga(name="ccle-nanostring-mirna-expression", version=1)
        pred.def <- list(dat=m, prefix="mirE", vartype="Exp", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% elif feature == "high conf GS" %}
        m <- t(load.matrix.from.taiga(name="achilles-2-4-3-demeter-high-confidence-gene-solutions", version=1))
        pred.def <- list(dat=m, prefix="GS", vartype="Exp", must.have.cellline=T)
        pred.sources[[length(pred.sources)+1]] <- pred.def

    {% else %}
        invalid
    {% endif %}
  {% endfor %}

  f <- writeAtlantisInputs(
	flock_run_dir,
        pred.sources=pred.sources,
        target.sources=list(
		    list(dat=targetMat, prefix=targetPrefix, vartype="GS", must.have.cellline=T)
	        ),
        analysisID=basename(flock_run_dir))

  createBulkAtlantisFlock("description", "regression", f$pred.file, f$target.file,
    f$anno.file, "{{predictiveFeatureSubset}}")

